FROM ubuntu:focal AS json-ci-base-focal

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates gnupg lsb-release wget && \
    PPA_KEY_FINGERPRINT=$(wget -O - "https://launchpad.net/api/1.0/~ubuntu-toolchain-r/+archive/test" \
        | sed -En 's/.*"signing_key_fingerprint": "([^"]*)".*/\1/ p') && \
    wget -O - "https://keyserver.ubuntu.com/pks/lookup?op=get&options=mr&exact=on&search=0x${PPA_KEY_FINGERPRINT}" \
        | gpg -q --dearmor \
        >"/usr/share/keyrings/ubuntu_toolchain_r_test.gpg" && \
    printf "Types: deb\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "URIs: https://ppa.launchpadcontent.net/ubuntu-toolchain-r/test/ubuntu/\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Suites: $(lsb_release -cs)\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Components: main\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Signed-By: /usr/share/keyrings/ubuntu_toolchain_r_test.gpg\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Types: deb\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "URIs: http://archive.ubuntu.com/ubuntu/\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Suites: bionic\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Components: main universe\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Types: deb\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "URIs: http://archive.ubuntu.com/ubuntu/\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Suites: xenial\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Components: main universe\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Types: deb\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "URIs: http://archive.ubuntu.com/ubuntu/\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Suites: xenial-updates\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Components: main universe\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        git libidn11 make ninja-build && \
    wget https://github.com/Kitware/CMake/releases/download/v3.24.1/cmake-3.24.1-Linux-x86_64.sh && \
    chmod a+x cmake-3.24.1-Linux-x86_64.sh && \
    ./cmake-3.24.1-Linux-x86_64.sh --skip-license --prefix=/usr/local --exclude-subdir && \
    rm -v cmake-3.24.1-Linux-x86_64.sh && \
    rm -v /usr/local/bin/ccmake /usr/local/bin/cmake-gui /usr/local/bin/cpack && \
    rm -rf /usr/local/doc/cmake /usr/local/man && \
    apt-mark auto gnupg wget && \
    apt autoremove -y --purge && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*


FROM json-ci-base-focal AS json-ci-icpc-2022.1.0

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gnupg wget && \
    wget -O - "https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB" \
        | gpg -q --dearmor \
        >"/usr/share/keyrings/intel-sw-products.gpg" && \
    printf "Types: deb\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "URIs: https://apt.repos.intel.com/oneapi\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Suites: all\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Components: main\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "Signed-By: /usr/share/keyrings/intel-sw-products.gpg\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    printf "\n" >>/etc/apt/sources.list.d/json-ci.sources && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        g++ intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic-2022.1.0 && \
    rm -rf \
        /opt/intel/oneapi/compiler/latest/linux/lib/oclfpga \
        /opt/intel/oneapi/debugger \
        /opt/intel/oneapi/dev-utilities \
        /opt/intel/oneapi/tbb && \
    apt-get install -y --no-install-recommends \
        strace && \
    strace -Afxxyze trace=%file -o /tmp/.trace_log.0000 /bin/sh -c '. /opt/intel/oneapi/setvars.sh' && \
    . /opt/intel/oneapi/setvars.sh && \
    git clone https://github.com/nlohmann/json.git /tmp/json-0001 && \
    strace -Afxxyze trace=%file -o /tmp/.trace_log.0002 cmake -S /tmp/json-0001 -B /tmp/json-0001/build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=icpc -DCMAKE_CXX_FLAGS_INIT=-fp-model=precise -DJSON_FastTests=ON && \
    strace -Afxxyze trace=%file -o /tmp/.trace_log.0003 cmake --build /tmp/json-0001/build -t all && \
    strace -Afxxyze trace=%file -o /tmp/.trace_log.0004 cmake --build /tmp/json-0001/build -t download_test_data && \
    strace -Afxxyze trace=%file -o /tmp/.trace_log.0005 ctest --test-dir /tmp/json-0001/build --output-on-failure -j $(NPROC=$(nproc); echo $(( NPROC < 16 ? NPROC : 16 ))) -E test-unicode && \
    sed -En \
        -e 's/.*= [0-9]+<((\\x[0-9a-f][0-9a-f])*)>/\1/ p' \
        -e 's/^[0-9]+[ ]+execve\("((\\x[0-9a-f][0-9a-f])*)".*/\1/ p' \
        /tmp/.trace_log.0000 /tmp/.trace_log.0002 /tmp/.trace_log.0003 /tmp/.trace_log.0004 /tmp/.trace_log.0005 \
        | tr -t '\n' '\0' \
        | xargs -rn 1 -0 /usr/bin/printf "%b\n" \
        | cat - \
        | xargs -rn 1 realpath -m -- \
        | sort -u > /tmp/.keep_list.0006 && \
    find "$(realpath -m "/usr/lib/gcc/x86_64-linux-gnu")" "$(realpath -m "/opt/intel")" -type f \
        | xargs -rn 1 realpath -- \
        | sort -u >/tmp/.remove_list.0007 && \
    comm -2 -3 /tmp/.remove_list.0007 /tmp/.keep_list.0006 \
        | xargs rm -- && \
    find "$(realpath -m "/usr/lib/gcc/x86_64-linux-gnu")" "$(realpath -m "/opt/intel")" -xtype l -exec rm \{\} \+ && \
    rm \
        /tmp/.trace_log.0000 /tmp/.trace_log.0002 /tmp/.trace_log.0003 /tmp/.trace_log.0004 /tmp/.trace_log.0005 \
        /tmp/.keep_list.0006 /tmp/.remove_list.0007 && \
    apt-get install -y --no-install-recommends \
        binutils && \
    find /opt/intel -type f -executable \
        | while read f; do \
        if [ "$(head -c4 "$f")" = "$(/usr/bin/printf "%b" "\x7fELF")" ]; then \
        strip "$f"; \
        fi \
        done && \
    apt-mark auto binutils gnupg strace wget && \
    apt autoremove -y --purge && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*
